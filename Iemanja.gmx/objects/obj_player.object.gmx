<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_stand_north</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>541</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_set</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>spr_player_swim_north</sprite>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0.1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>212</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_ambieent_sound</sound>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_ambieent_sound</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.pontos = 0;

spd = 4;
stun_time = 0;

game_time = 45;

h_direction = 0;
v_direction = 0;
//Stun Animation********************************************************
ring = instance_create(x-12,y-6,obj_stunned_ring);
ring.depth = -y;
ring.visible = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Counting the game time************************************************
game_time -= delta_time/1000000;

if(game_time &lt;= 0)
{
    show_message("Congratulations your score is "+ string(global.pontos)+" points!!!!");
    room_restart();
    //instance_deactivate_all(true);
}
///
with(ring)
{
    move_towards_point(obj_player.x, obj_player.y, 200);
}


//Get axis**************************************************************
haxis = gamepad_axis_value(0, gp_axislh);
vaxis = gamepad_axis_value(0, gp_axislv);

//show_debug_message("Valor VAXIS:"+string(gamepad_axis_value(0, gp_axislv)));
//show_debug_message("Valor HAXIS:"+string(gamepad_axis_value(0, gp_axislh)));

//Player controller*****************************************************

if((keyboard_check(vk_right)|| keyboard_check(ord("D")) || gamepad_button_check(0, gp_padr) || (haxis &gt; 0.15 ) )&amp;&amp; x &lt;= 400)
{
    h_direction = 1;
    
    //x+=spd;
    //sprite_index = spr_player_swim_east;
    //image_speed = 0.1;
    
}

else if((keyboard_check(vk_left)|| keyboard_check(ord("A")) || 
                        gamepad_button_check(0, gp_padl) ||(haxis &lt; -0.15 ) )&amp;&amp; x &gt;= 0)
{
    h_direction = -1;
    
    //x-=spd;
    //sprite_index = spr_player_swim_west;
    //image_speed = 0.1;
    
}
else
{
    h_direction = 0;
}

if((keyboard_check(vk_up)|| keyboard_check(ord("W")) || 
                        gamepad_button_check(0, gp_padu) || (vaxis &lt; -0.15 ) )&amp;&amp; y &gt;=0)

{
    v_direction = -1;    

    //y-=spd*1.3;
    //sprite_index = spr_player_swim_north;
    //image_speed = 0.1;
}
else if((keyboard_check(vk_down)|| keyboard_check(ord("S")) || 
                        gamepad_button_check(0, gp_padd) || (vaxis &gt; 0.15 )) &amp;&amp; y &lt;= 300)
{
    v_direction = 1;
    
    //y+=spd*0.7;    
    //sprite_index = spr_player_swim_south;
    //image_speed = 0.1;
    
}
else
{
    v_direction = 0;
}
//Movement animation and set speed*******************************************************************************

if(h_direction == 1 &amp;&amp; v_direction == 0)
{
    x+=spd;
    sprite_index = spr_player_swim_east;
    image_speed = 0.1;
}
else if(h_direction == -1 &amp;&amp; v_direction == 0)
{
    x-=spd;
    sprite_index = spr_player_swim_west;
    image_speed = 0.1;
}
else if(h_direction == 0 &amp;&amp; v_direction == 1)
{
    y+=spd*0.7;    
    sprite_index = spr_player_swim_south;
    image_speed = 0.1;
}
else if(h_direction == 0 &amp;&amp; v_direction == -1)
{
    y-=spd*1.3;
    sprite_index = spr_player_swim_north;
    image_speed = 0.1;
}
else if(h_direction == 1 &amp;&amp; v_direction == 1)
{
    x+=spd;
    y+=spd*0.7;
    sprite_index = spr_player_swim_southeast;
    image_speed = 0.1;
    
}
else if(h_direction == 1 &amp;&amp; v_direction == -1)
{
    x+=spd;
    y-=spd*1.3;
    sprite_index = spr_player_swim_northeast;
    image_speed = 0.1;
}
else if(h_direction == -1 &amp;&amp; v_direction == 1)
{
    x-=spd;
    y+=spd*0.7;     
    sprite_index = spr_player_swim_southwest;
    image_speed = 0.1;
}
else if(h_direction == -1 &amp;&amp; v_direction == -1)
{
    x-=spd;
    y-=spd*1.3;
    sprite_index = spr_player_swim_northwest;
    image_speed = 0.1;
}
//Pause button*******************************************************************
if(keyboard_check(ord("P")))
{
    show_message("PAUSED");
}

//Se jogador colidir com a onda Ã© stunado por 2 segundos************************
if(place_meeting(x,y,obj_wave))
{
    temp_wave = place_meeting(x,y,obj_wave);
    //show_debug_message("Player colidiu com onda "+string(temp_wave.id));
    
    stun_time = 2;
    ring.visible = true;
}

if(stun_time &gt; 0)
{   
    spd = 0;
    ring.visible = true;
    show_debug_message("Alarme de stun ainda tem "+string(stun_time)+" tempo");
    stun_time -= delta_time/1000000;
}
else
{
    ring.visible = false;
    spd = 4;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wave">
      <action>
        <libid>1</libid>
        <id>541</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_set</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>spr_player_stun</sprite>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0.4</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_white);
draw_text(10, 10, "Score:"+string(global.pontos));
draw_text(310,10,"Time left:"+string(game_time));


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
